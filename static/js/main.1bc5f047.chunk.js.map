{"version":3,"sources":["assets/beach.jpg","assets/resume.pdf","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","useState","key","setKey","Container","className","Row","Col","xs","Media","width","height","src","me","alt","Table","Tabs","id","activeKey","onSelect","k","Tab","eventKey","title","href","resume","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1bc5f047.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beach.fa2515e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/resume.93eb0297.pdf\";","import React, { useState } from 'react';\n\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Table from 'react-bootstrap/Table'\nimport Media from 'react-bootstrap/Media'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\nimport me from './assets/beach.jpg'\nimport resume from './assets/resume.pdf'\n\nimport './App.css';\n\nfunction App() {\n\n  const [key, setKey] = useState('about');\n\n  return (\n    <div>\n    <Container className=\"centerBox\">\n      <Row className=\"head purpBorder mt-3 mx-2 p-2\">\n        <Col className=\"text-center men\"> Hello, World! I am a developer.\n        </Col>\n      </Row>\n       \n      <Row className=\"men purpBorder mt-2 mx-2 p-2\">\n        <Col xs={4}>\n          <Media className=\"border-light\">\n            <img\n              width={140}\n              height={140}\n              className=\"mt-2 rounded\"\n              src={me}\n              alt=\"img\"\n            />\n          </Media>\n        </Col>\n        <Col xs={8}>\n          <Table className=\"mt-3 mb-0 men\">\n            <tbody>\n              <tr>\n                <td> Name </td>\n                <td> Dorian Meade </td>\n              </tr>\n              <tr>\n                <td> Age </td>\n                <td> 21 </td>\n              </tr>\n              <tr>\n                <td> Location </td>\n                <td> Gainesville, FL </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n       \n        <Tabs\n          id=\"controlled-tab-example\"\n          activeKey={key}\n          onSelect={(k) => setKey(k)}\n          className=\"mx-2 mt-2 border-0\"\n        >\n         <Tab className=\"men box purpBorder mx-2 pl-2\" eventKey=\"about\" title=\"About\">\n           <Row><Col> >Dorian.origin</Col></Row>\n           <Row className=\"mb-3\"><Col><span>&nbsp;&nbsp;</span>=> Davie, FL</Col> </Row>\n\n           <Row><Col> >Dorian.education</Col> </Row>\n           <Row className=\"mb-3\"><Col><span>&nbsp;&nbsp;</span>=> Univerity of Florida</Col> </Row>\n\n           <Row><Col> >Dorian.major</Col> </Row>\n           <Row className=\"mb-3\"><Col><span>&nbsp;&nbsp;</span>=> Computer Science</Col> </Row>\n\n           <Row><Col> >Dorian.minor</Col> </Row>\n           <Row className=\"mb-3\"><Col><span>&nbsp;&nbsp;</span>=> Mathematics </Col> </Row>\n\n           <Row><Col> >Dorian.graduation</Col> </Row>\n           <Row className=\"mb-3\"><Col><span>&nbsp;&nbsp;</span>=> 2020 </Col> </Row>\n\n           <Row><Col> >Dorian.interests</Col> </Row>\n           <Row className=\"mb-3\"><Col><span>&nbsp;&nbsp;</span>=> [\"coding\", \"coffee\", \"cats\", \"machine_learning\", <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\"music_festivals\", \"nature\"] </Col> </Row>\n         </Tab>\n         \n         <Tab className=\"men box purpBorder mx-2 pl-2\" eventKey=\"resume\" title=\"Resume\">\n            <Row><Col> >Dorian.resume</Col> </Row>\n            <Row className=\"mb-3\"><Col><span>&nbsp;&nbsp;</span>=> <a className=\"linked men\" href={resume}>resume.pdf</a></Col></Row>\n         </Tab>\n\n         <Tab className=\"men box purpBorder mx-2 pl-2\" eventKey=\"contact\" title=\"Contact\">\n            <Row><Col> >Dorian.github</Col></Row>\n            <Row className=\"mb-3\"><Col><span>&nbsp;&nbsp;</span>=> <a className=\"linked men\" href=\"https://github.com/dorianmeade\">github.com/dorianmeade</a></Col></Row>\n\n            <Row><Col> >Dorian.linkedin</Col> </Row>\n            <Row className=\"mb-3\"><Col><span>&nbsp;&nbsp;</span>=> <a className=\"linked men\" href=\"https://www.linkedin.com/in/dorianmeade\">linkedin.com/in/dorianmeade</a></Col></Row>\n\n            <Row><Col> >Dorian.facebook</Col> </Row>\n            <Row className=\"mb-3\"><Col><span>&nbsp;&nbsp;</span>=> <a className=\"linked men\" href=\"https://www.facebook.com/dorianmeade\">facebook.com/dorianmeade</a></Col></Row>\n\n            <Row><Col> >Dorian.email</Col> </Row>\n            <Row className=\"mb-3\"><Col><span>&nbsp;&nbsp;</span>=> <a className=\"linked men\" href=\"mailto:dorianmeade1@gmail.com\">dorianmeade1@gmail.com</a></Col></Row>\n\n           </Tab>\n        </Tabs>\n\n       \n\n    </Container>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}