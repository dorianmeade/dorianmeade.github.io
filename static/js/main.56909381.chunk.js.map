{"version":3,"sources":["assets/me.JPG","assets/meade.pdf","assets/sparkly.gif","assets/pink.gif","assets/sparkles.gif","components/Modal.js","components/DynamicSky.js","components/Switch.js","components/Chatbot.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Modal","useState","key","setKey","Container","className","Row","Col","width","height","viewBox","class","fill","xmlns","fill-rule","d","xs","Media","src","me","alt","Table","Tabs","id","transition","activeKey","onSelect","k","Tab","eventKey","title","href","resume","DynamicSky","images","0","sparkle","1","pink","2","sparkles","how","time","size","Switch","bkgd","setBkgd","Button","onClick","variant","Chatbot","window","watsonAssistantChatOptions","integrationID","region","serviceInstanceID","onLoad","instance","render","setTimeout","t","document","createElement","head","appendChild","App","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.56909381.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.1be06d6d.JPG\";","module.exports = __webpack_public_path__ + \"static/media/meade.cd8a2b4d.pdf\";","module.exports = __webpack_public_path__ + \"static/media/sparkly.ac5a56b2.gif\";","module.exports = __webpack_public_path__ + \"static/media/pink.45edd81b.gif\";","module.exports = __webpack_public_path__ + \"static/media/sparkles.74356439.gif\";","import React, { useState } from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Table from 'react-bootstrap/Table'\nimport Media from 'react-bootstrap/Media'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n\nimport me from '../assets/me.JPG'\nimport resume from '../assets/meade.pdf'\n\n\nfunction Modal() { \n    const [key, setKey] = useState('about');\n\n    return (\n        <Container className=\"centerBox\">\n            <Row className=\"purpBorder mt-3 mx-2 p-2\">\n                <Col className=\"text-center men showbox scale\"> \n                    <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" class=\"bi bi-code-slash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fill-rule=\"evenodd\" d=\"M4.854 4.146a.5.5 0 0 1 0 .708L1.707 8l3.147 3.146a.5.5 0 0 1-.708.708l-3.5-3.5a.5.5 0 0 1 0-.708l3.5-3.5a.5.5 0 0 1 .708 0zm6.292 0a.5.5 0 0 0 0 .708L14.293 8l-3.147 3.146a.5.5 0 0 0 .708.708l3.5-3.5a.5.5 0 0 0 0-.708l-3.5-3.5a.5.5 0 0 0-.708 0zm-.999-3.124a.5.5 0 0 1 .33.625l-4 13a.5.5 0 0 1-.955-.294l4-13a.5.5 0 0 1 .625-.33z\"/>\n                    </svg>\n                    &nbsp;Hello, World! I am a developer.\n                </Col>\n            </Row>\n            <Row className=\"men purpBorder mt-2 mx-2 p-2\">\n                <Col xs={4}>\n                    <Media className=\"border-light\">\n                    <img\n                        width={140}\n                        height={140}\n                        className=\"mt-2 circular\"\n                        src={me}\n                        alt=\"img\"\n                    />\n                    </Media>\n                </Col>\n                <Col xs={8}>\n                    <Table className=\"mt-3 mb-0 men\">\n                    <tbody>\n                        <tr>\n                        <td> Name </td>\n                        <td className=\"switch\"> Dorian Meade </td>\n                        </tr>\n                        <tr>\n                        <td> Age </td>\n                        <td className=\"switch\"> 21 </td>\n                        </tr>\n                        <tr>\n                        <td> Location </td>\n                        <td className=\"switch\"> Ft Lauderdale, FL </td>\n                        </tr>\n                    </tbody>\n                    </Table>\n                </Col>\n            </Row>\n            <Tabs\n                id=\"controlled-tab-example\"\n                transition={false}\n                activeKey={key}\n                onSelect={(k) => setKey(k)}\n                className=\"mx-2 mt-2\"\n            >\n                <Tab className=\"men box purpBorder mx-2 pl-2 \" eventKey=\"about\" title=\"About\">\n   \n                    <Row><Col> >Dorian.education</Col> </Row>\n                    <Row className=\"mb-3 switch\"><Col><span>&nbsp;&nbsp;</span>=> Univerity of Florida</Col> </Row>\n        \n                    <Row><Col> >Dorian.major</Col> </Row>\n                    <Row className=\"mb-3 switch\"><Col><span>&nbsp;&nbsp;</span>=> Computer Science</Col> </Row>\n        \n                    <Row><Col> >Dorian.minor</Col> </Row>\n                    <Row className=\"mb-3 switch\"><Col><span>&nbsp;&nbsp;</span>=> Mathematics </Col> </Row>\n        \n                    <Row><Col> >Dorian.expectedGraduation</Col> </Row>\n                    <Row className=\"mb-3 switch\"><Col><span>&nbsp;&nbsp;</span>=> December 2020 </Col> </Row>\n                                       \n                    <Row><Col> >Dorian.resume</Col> </Row>\n                    <Row className=\"mb-3\"><Col><span>&nbsp;&nbsp;</span>=> <a href={resume}>dorianmeade.pdf</a></Col></Row>\n                    \n                    <Row><Col> >Dorian.origin</Col></Row>\n                    <Row className=\"mb-3 switch\"><Col><span>&nbsp;&nbsp;</span>=> South Florida</Col> </Row>\n        \n                    <Row><Col> >Dorian.interests</Col> </Row>\n                    <Row className=\"mb-3 switch\"><Col><span>&nbsp;&nbsp;</span>=> [\"web_development\", \"machine_learning\", \"coffee\", <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\"cats\", \"reading\", \"music_festivals\", \"hammocking\"] </Col> </Row>\n                </Tab>\n  \n                <Tab className=\"men box purpBorder mx-2 pl-2\" eventKey=\"connect\" title=\"Connect\">\n        \n                    <Row><Col> >Dorian.email</Col> </Row>\n                    <Row className=\"mb-3\"><Col><span>&nbsp;&nbsp;</span>=> <a href=\"mailto:dorianmeade1@gmail.com\">dorianmeade1@gmail.com</a></Col></Row>\n\n                    <Row><Col> >Dorian.linkedin</Col> </Row>\n                    <Row className=\"mb-3\"><Col><span>&nbsp;&nbsp;</span>=> <a href=\"https://www.linkedin.com/in/dorianmeade\">linkedin.com/in/dorianmeade</a></Col></Row>\n\n                    <Row><Col> >Dorian.github</Col></Row>\n                    <Row className=\"mb-3\"><Col><span>&nbsp;&nbsp;</span>=> <a href=\"https://github.com/dorianmeade\">github.com/dorianmeade</a></Col></Row>\n        \n                </Tab>\n            </Tabs>\n        </Container>\n    );\n}\n\nexport default Modal;","import React from 'react';\nimport Sky from 'react-sky';\nimport sparkle from '../assets/sparkly.gif'\nimport pink from '../assets/pink.gif'\nimport sparkles from '../assets/sparkles.gif'\n\nfunction DynamicSky()\n{ \n    return (\n        <Sky\n            images={{\n            0: sparkle,\n            1: pink,\n            2: sparkles\n            }}\n            how={70}\n            time={120}\n            size={'100px'} />    \n    );\n}\n\nexport default DynamicSky;","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport DynamicSky from \"./DynamicSky\"\n\n\n\nfunction Switch(){ \n\n    const [bkgd, setBkgd] = useState('sparkles off');\n\n    return (\n        <div>\n            <Button onClick={() => setBkgd(bkgd === 'sparkles off' ? \n                'sparkles on' : 'sparkles off')} variant=\"outline-secondary\" \n                className=\"btn\">{bkgd}</Button>\n\n            {bkgd === 'sparkles on' ? <DynamicSky/> : null}\n        </div>\n    );\n}\n\nexport default Switch;","import React from 'react';\n\n\n\nfunction Chatbot()\n{ \n\n    window.watsonAssistantChatOptions = {\n      integrationID: \"037b0200-ae77-4250-ab9b-5d2d8eb1f622\", // The ID of this integration.\n      region: \"us-east\", // The region your integration is hosted in.\n      serviceInstanceID: \"d3c97005-aebb-463d-840a-9e3b0d1395e7\", // The ID of your service instance.\n      onLoad: function(instance) { instance.render(); }\n    };\n    setTimeout(function(){\n      const t=document.createElement('script');\n      t.src=\"https://web-chat.global.assistant.watson.appdomain.cloud/loadWatsonAssistantChat.js\";\n      document.head.appendChild(t);\n    });\n  \n    return ( \n      <div></div>\n    );\n}\n\nexport default Chatbot;","import React from 'react';\nimport Modal from \"./components/Modal.js\"\nimport Switch from \"./components/Switch.js\"\nimport Chatbot from \"./components/Chatbot.js\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n        <Switch/>\n        <Modal/>\n        <Chatbot/>\n\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}